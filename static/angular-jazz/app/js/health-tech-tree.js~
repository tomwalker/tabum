"use strict";
 
var googleChart = googleChart || angular.module("google-chart",[]);
 
googleChart.directive("virusTechTree",function(){
    return{
        restrict : "A",
        scope : {
            data: '=data',
            vtech: '=vtech',
            points: '=points',
			effectOn: '=effect'
			
        },
        link: function($scope, $elem, $attr){

            var googleOrgChart = new google.visualization.OrgChart($elem[0]);
            var activatedThisTurn = [];
            
            google.visualization.events.addListener(googleOrgChart, 'select', selectHandler);

            function selectHandler() {

                if (googleOrgChart.getSelection().length !== 0){
                    var nodeRowNumber = googleOrgChart.getSelection()[0]['row'];

                    var nodeKey = googleOrgChart.l.J[nodeRowNumber]['c'][0]['v'].toLowerCase(); // fuck you google charts
                    var allNodes = $scope.vtech;
                    var selectedNode = allNodes[nodeKey.toLowerCase()];
                    console.log(selectedNode);

                    if (selectedNode['selectable'] === true) {

                        // if it is, check if its in list of nodes activated during this turn and
                        // deactivate it by removing it from list, setting active false, removing
						// points from effectOn, adding cost back to point and redrawing node

                        if (activatedThisTurn.indexOf(selectedNode['id']) >= 0) {
                            activatedThisTurn.pop(selectedNode.id);

                            $scope.vtech[nodeKey.toLowerCase()]['active'] = false;

							$scope.effectOn.infectivity = $scope.effectOn.infectivity + 
								$scope.vtech[nodeKey]['effect_on_infectivity'];
							$scope.effectOn.lethality = $scope.effectOn.lethality + 
								$scope.vtech[nodeKey]['effect_on_lethality'];
							$scope.effectOn.land_spread = $scope.effectOn.land_spread + 
								$scope.vtech[nodeKey]['effect_on_land_spread'];
							$scope.effectOn.sea_spread = $scope.effectOn.sea_spread + 
								$scope.vtech[nodeKey]['effect_on_sea_spread'];
							$scope.effectOn.air_spread = $scope.effectOn.air_spread + 
								$scope.vtech[nodeKey]['effect_on_air_spread'];
							$scope.effectOn.shift = $scope.effectOn.shift + 
								$scope.vtech[nodeKey]['effect_on_shift'];

                            $scope.points = $scope.points + $scope.vtech[nodeKey]['cost'];

							$scope.data.removeRow(nodeRowNumber);

							if (selectedNode.parent === 0){
								var rowData = [
									[{v: selectedNode.property, f: selectedNode.display_inactive }, 
									 '', selectedNode.property]
								];										
							} else{
								var rowData = [
									[{v: selectedNode.property, f: selectedNode.display_inactive }, 
									 selectedNode.parent, 
									 selectedNode.property]
								];
							}
							$scope.data.insertRows(nodeRowNumber, rowData);
							googleOrgChart.setSelection(); 
							
                        } else {
                            // if not, check if required nodes are active
                            var requiredNodes = selectedNode.requires;  // list of required
                            var allBelowActive = 0;
                            for (var i = 0; i < requiredNodes.length; i++) {
                                var x = requiredNodes[i];
                                if ($scope.vtech[x]['active'] === false){
                                    allBelowActive++;
                                };
                            }
							// if all necessary are active, check if enough points are
							// available
                            if (allBelowActive === 0){ 
                                var cost = $scope.vtech[nodeKey]['cost'];
								// if enough points are available, remove cost from points,
								// set node as active, add points to effectOn, add to the
								// activatedThisTurn list, set it to active then change node
								// to display active
                                if (cost <= $scope.points){
                                    $scope.points = $scope.points - cost;
                                    $scope.vtech[nodeKey]['active'] = true;

									console.log($scope.effectOn);
									$scope.effectOn.infectivity = $scope.effectOn.infectivity + 
										$scope.vtech[nodeKey]['effect_on_infectivity'];
									$scope.effectOn.lethality = $scope.effectOn.lethality + 
										$scope.vtech[nodeKey]['effect_on_lethality'];
									$scope.effectOn.land_spread = $scope.effectOn.land_spread + 
										$scope.vtech[nodeKey]['effect_on_land_spread'];
									$scope.effectOn.sea_spread = $scope.effectOn.sea_spread + 
										$scope.vtech[nodeKey]['effect_on_sea_spread'];
									$scope.effectOn.air_spread = $scope.effectOn.air_spread + 
										$scope.vtech[nodeKey]['effect_on_air_spread'];
									$scope.effectOn.shift = $scope.effectOn.shift + 
										$scope.vtech[nodeKey]['effect_on_shift'];
									console.log($scope.effectOn);

									activatedThisTurn.push(selectedNode['id']);

									$scope.vtech[nodeKey]['active'] = true;

									$scope.data.removeRow(nodeRowNumber);

									if (selectedNode.parent === 0){
										var rowData = [
											[{v: selectedNode.property, f: selectedNode.display_active }, 
											 '', selectedNode.property]
										];										
									} else{
										var rowData = [
											[{v: selectedNode.property, f: selectedNode.display_active }, 
											 selectedNode.parent, 
											 selectedNode.property]
										];
									}
									$scope.data.insertRows(nodeRowNumber, rowData);
									googleOrgChart.setSelection(); 
									// clears selection to prevent multiple clicks being
									// required to unselect it
                                }
                                
                            }

                        }
                        
                    }
                }


                $scope.$apply(); // update data, forcing $watch to fire
            }

            // watch the data and redraw if changes. Done so that map reloads after GET has completed
            $scope.$watch('data', function(v) {

                // var data = google.visualization.arrayToDataTable(v);
                var options = {allowHtml: true,
                               nodeClass: "techtreenode",
                               selectedNodeClass: "selectedtechtreenode",
                               size: "large"
                              };
                googleOrgChart.draw(v, options);
            }, true);

        }
    }
});
